# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Query dependencies
        shell: bash
        run: |
          Rscript -e "install.packages('remotes')"
          Rscript -e "saveRDS(remotes::dev_package_deps(dependencies = TRUE), '.github/depends.Rds', version = 2)"
          Rscript -e "writeLines(sprintf('R-%i.%i', getRversion()$major, getRversion()$minor), '.github/R-version')"

      - name: Cache R packages
        uses: actions/cache@v4
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |
          Rscript -e "writeLines(remotes::system_requirements('ubuntu', '20.04'))" | sudo xargs -r apt-get install -y

      - name: Install dependencies
        shell: bash
        run: |
          Rscript -e "remotes::install_deps(dependencies = TRUE)"
          Rscript -e "remotes::install_cran('rcmdcheck')"

      - name: Check
        shell: bash
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: Rscript -e "rcmdcheck::rcmdcheck(args = c('--no-manual', '--as-cran'), error_on = 'warning', check_dir = 'check')"

      - name: Show testthat output
        if: always()
        shell: bash
        run: |
          if [ -d "check" ]; then
            find check -type f -name "testthat.Rout*" -exec cat {} \;
          fi

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check 